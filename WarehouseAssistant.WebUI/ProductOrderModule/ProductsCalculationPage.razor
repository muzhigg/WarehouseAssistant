@page "/order/products"
@using WarehouseAssistant.Shared.Models
@using WarehouseAssistant.Shared.Models.Db
@using WarehouseAssistant.WebUI.Components
@using WarehouseAssistant.WebUI.ProductOrder
@using WarehouseAssistant.WebUI.ProductOrderModule.Dialogs

@namespace WarehouseAssistant.WebUI.ProductOrderModule

@code {

	private string QuantityToOrderCellClassFunc(ProductTableItem arg)
	{
		string classString = "";

		if (arg.QuantityToOrder > arg.MaxCanBeOrdered)
		{
			classString += "mud-error mud-error-text";
		}
		else if (arg.QuantityToOrder > 0)
		{
			classString += "mud-info mud-info-text";
		}

		return classString;
	}

	private string RowClassFunc(ProductTableItem arg1, int arg2)
	{
		string style = "";

		if (arg1.QuantityToOrder >= arg1.MaxCanBeOrdered && arg1.QuantityToOrder != 0)
		{
			style += "mud-warning mud-warning-text";
		}

		return style;
	}

}

<Table TItem="ProductTableItem" @ref="_table" RowClassFunc="RowClassFunc"
       RowClass="product-row" TableImported="RefreshProductsReferencesAsync">

	<ToolBarTemplate>
		<MudMenu hidden="@(!context.Items.Any())" Label="Рассчитать выбранные"
		         Disabled="@(context.Loading || context.SelectedCount == 0)" Variant="Variant.Filled"
		         Color="Color.Primary" Class="mr-2" StartIcon="@Icons.Material.Filled.Calculate">
			<MudMenuItem OnClick="OpenCalculationDialog<DaysBasedCalculatorDialog>">На количество дней</MudMenuItem>
			<MudMenuItem OnClick="OpenCalculationDialog<IncrementByPercentageCalculatorDialog>">Увеличить в процентах</MudMenuItem>
			<MudMenuItem OnClick="OpenCalculationDialog<QuantityPerBoxRoundDialog>">Округление в коробки</MudMenuItem>
			<MudMenuItem OnClick="OpenCalculationDialog<ShelfQuantityAdjustmentCalculatorDialog>">Добавить до количества на полке</MudMenuItem>
			<MudMenuItem OnClick="OpenCalculationDialog<SubtractCurrentQuantityCalculator>">Вычесть текущее количество</MudMenuItem>
			<MudMenuItem OnClick="OpenCalculationDialog<SubtractFromTableStrategyDialog>">
				Вычесть из табличного
				документа
			</MudMenuItem>
		</MudMenu>
		<MudButton id="export-table-button" hidden="@(!context.Items.Any())"
		           Disabled="@(context.Loading || context.SelectedCount == 0)" Variant="Variant.Outlined"
		           Color="Color.Primary" Class="mx-2"
		           OnClick="OpenExportTableDialog" StartIcon="@Icons.Material.Filled.ImportExport">
			Экспорт таблицы
		</MudButton>
		<MudButton id="remove-products-button" hidden="@(!context.Items.Any())"
		           Disabled="@(context.Loading || context.SelectedCount == 0)" Variant="Variant.Filled"
		           Color="Color.Error" Class="ml-2"
		           OnClick="RemoveSelectedProductsAsync" StartIcon="@Icons.Material.Filled.Delete">
			Удалить выбранные
		</MudButton>
	</ToolBarTemplate>

	<ColumnsTemplate>
		<HierarchyColumn T="ProductTableItem"></HierarchyColumn>
		<SelectColumn T="ProductTableItem"/>
		<PropertyColumn T="ProductTableItem" TProperty="string" Property="x => x.Name" Title="Название" Sortable="false"
		                Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="string" Property="x => x.Article" Title="Артикул"
		                Sortable="false" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="int" Property="x => x.AvailableQuantity"
		                Title="Доступное количество на БГЛЦ" Sortable="false" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="int" Property="x => x.CurrentQuantity"
		                Title="Текущее количество в СПб" Sortable="false" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="double" Property="x => x.AverageTurnover"
		                Title="Средняя оборачиваемость в день" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="double" Property="x => x.StockDays"
		                Title="Запас на количество дней" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="double" Property="x => x.OrderCalculation"
		                Title="Рекомендованное количество" Resizable="false" IsEditable="false"/>
		<PropertyColumn T="ProductTableItem" TProperty="int" CellClass="quantity-to-order-cell" Filterable="true"
		                IsEditable="true" Property="x => x.QuantityToOrder" Resizable="false"
		                Title="Количество для заказа" CellClassFunc="QuantityToOrderCellClassFunc">
			<EditTemplate>
				<MudNumericField Value="@context.Item.QuantityToOrder"
				                 ValueChanged="@(context.Item.SetQuantityToOrderUnsafe)"
				                 Class="quantity-to-order-input" T="int"
				                 Min="0" ErrorText="Недопустимое значение"/>
			</EditTemplate>
			<FooterTemplate>
				@{
					double boxes = 0;
					foreach (ProductTableItem productTableItem in context.Items)
					{
						int? perBox = productTableItem.DbReference?.QuantityPerBox;

						if (perBox.HasValue == false)
						{
							perBox = 54;
						}

						boxes += (double)productTableItem.QuantityToOrder / perBox.Value;
					}
				}
				<MudText Typo="Typo.body2">@($"Коробок: {boxes:F}") </MudText>
			</FooterTemplate>
		</PropertyColumn>
	</ColumnsTemplate>

	<ChildRowTemplate>
		<MudCard Class="m-3 p-3" Style="@("background-color: var(--mud-palette-background)")">
			<MudCardHeader>
				<CardHeaderContent>
					<MudText Typo="Typo.h6">@context.Item.Name</MudText>
				</CardHeaderContent>
			</MudCardHeader>

			<MudCardContent>
				<MudText
					Typo="Typo.body1">
					@($"В наличии на БГЛЦ: {@context.Item.AvailableQuantity}. Максимально доступно для заказа: {context.Item.MaxCanBeOrdered}")
				</MudText>
				@if (context.Item.DbReference == null)
				{
					<MudText Typo="Typo.body2" Color="Color.Secondary">Товар не найден в базе данных</MudText>
					<MudButton Variant="Variant.Filled" Color="Color.Primary"
					           OnClick="() => ProductFormDialog.ShowAddDialogAsync(context.Item)">
						Добавить в базу данных
					</MudButton>
				}
				else
				{
					Product dbItem = context.Item.DbReference;

					<MudText Typo="Typo.body2">@($"Артикул: {dbItem.Article}")</MudText>
					<MudText Typo="Typo.body2">@($"Штрих-код: {dbItem.Barcode}")</MudText>
					<MudText Typo="Typo.body2">@($"Количество на коробку: {dbItem.QuantityPerBox}")</MudText>
					<MudText Typo="Typo.body2">@($"Количество на полку: {dbItem.QuantityPerShelf}")</MudText>
					<MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="() => ShowEditDbDialog(dbItem)">
						Редактировать данные
					</MudButton>
				}
			</MudCardContent>
		</MudCard>
	</ChildRowTemplate>
</Table>